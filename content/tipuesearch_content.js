var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站:\xa0 https://mdecd2025.github.io/hw-yan41223101/content/index.html \xa0 \n 學員作業倉儲:\xa0 https://github.com/mdecd2025/hw-yan41223101 \xa0 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n', 'tags': '', 'url': 'About.html'}, {'title': 'List', 'text': '2a-g8 \n \n', 'tags': '', 'url': 'List.html'}, {'title': 'W4', 'text': '建立可攜程式 \n', 'tags': '', 'url': 'W4.html'}, {'title': 'Tasks', 'text': '', 'tags': '', 'url': 'Tasks.html'}, {'title': 'task1', 'text': '\n', 'tags': '', 'url': 'task1.html'}, {'title': 'task2', 'text': '\n', 'tags': '', 'url': 'task2.html'}, {'title': 'task3', 'text': '/downloads/fourbar__.zip \xa0 \n \n', 'tags': '', 'url': 'task3.html'}, {'title': 'task4', 'text': '\n', 'tags': '', 'url': 'task4.html'}, {'title': 'task5', 'text': '1. 請用繁體中文詳細說明下列資料 \n What is Webots? \n Webots 是一款專業的移動機器人模擬軟體套件。它提供了一個快速原型開發環境，使用者可以在其中創建擁有物理屬性（如質量、關節、摩擦係數等）的 3D 虛擬世界。使用者可以新增簡單的被動物體或稱為移動機器人的主動物體。這些機器人可以擁有不同的運動方式（如輪式機器人、腿式機器人或飛行機器人）。此外，它們可能配備多種感測器和執行器設備，例如距離感測器、驅動輪、攝影機、馬達、觸碰感測器、發射器、接收器等。最後，使用者可以為每個機器人編程，以使其表現出所需的行為。Webots 包含大量的機器人模型和控制程式範例，幫助使用者快速入門。 \n Webots 也提供多種與真實移動機器人接口的功能，因此一旦模擬機器人表現符合預期，使用者可以將其控制程式轉移到真實機器人上，如 e-puck、DARwIn-OP、Nao 等。透過相關系統，使用者也可以新增新的接口。 \n What can I do with Webots? \n \n \n \n \n \n \n \n \n \n Webots 非常適合用於與移動機器人相關的研究與教育專案。許多移動機器人專案多年來一直依賴 Webots，涵蓋以下領域： \n \n 移動機器人原型開發（學術研究、汽車工業、航空航太、吸塵器產業、玩具產業、愛好者等） \n 機器人運動學研究（腿式機器人、仿人機器人、四足機器人等） \n 多代理系統研究（群體智慧、協作移動機器人群體等） \n 自適應行為研究（遺傳算法、神經網絡、人工智慧等） \n 機器人教學（機器人學課程、C/C++/Java/Python 程式設計課程等） \n 機器人競賽（例如 Robotstadium 或 Rat\'s Life） \n \n What do I need to know to use Webots? \n \n \n \n \n \n \n \n \n \n \n 若要編寫您自己的機器人控制程式，您需要具備基本的 C、C++、Java、Python 或 MATLAB 程式設計語言知識。然而，即使您不熟悉這些語言，您仍然可以使用一種簡單的圖形程式設計語言 BotStudio 來編程 e-puck 和 Hemisson 機器人。 \n 如果您不想使用 Webots 提供的現有機器人模型，而是希望創建自己的機器人模型，或在模擬環境中添加特殊物體，您將需要具備基本的 3D 電腦圖形和 VRML97 描述語言知識。這將使您能夠在 Webots 中創建 3D 模型或從 3D 建模軟體匯入模型。 \n \n How do I get User Support? \n \n \n \n \n \n \n \n \n \n Cyberbotics 提供透過其 Premier Service 計劃和 Custom Development 服務的付費用戶支援。 \n 此外，還可以在各種地方獲得基於社群的支援，但無法保證您一定能得到問題的答案： \n \n 標註有 Webots 標籤的 Robotics StackExchange 可能是提出有關 Webots 技術問題的最佳場所。 \n GitHub Discussions 可用於提出與 Webots 開發及其文檔相關的問題。 \n GitHub Issues 應僅用於報告在 Webots 中發現的錯誤。 \n Discord 可用於快速提問和與 Webots 社群進行即興討論。 \n \n \n \n \n \n \n \n Webots Simulation \n \n \n \n \n 一個 Webots 模擬由以下幾個項目組成： \n \n 一個 Webots 世界檔案（.wbt），定義了其中一個或多個機器人及其環境。該 .wbt 檔案有時會依賴於外部的 PROTO 檔案（.proto）和材質檔案。 \n 一個或多個控制程式，用於控制上述機器人（支援 C/C++/Java/Python/MATLAB 語言）。 \n 一個可選的物理插件，可以用來修改 Webots 預設的物理行為（使用 C/C++ 編寫）。 \n \n What is a World? \n 在 Webots 中，世界是一個 3D 描述，定義了機器人及其環境的屬性。它包含了每個物體的描述：位置、方向、幾何形狀、外觀（如顏色或亮度）、物理屬性、物體類型等。世界是以層級結構組織的，其中物體可以包含其他物體（如同在 VRML97 中）。例如，一個機器人可以包含兩個輪子、一個距離感測器和一個關節，而該關節本身又包含一個攝影機等。世界檔案不包含機器人的控制程式碼；它只指定每個機器人所需的控制程式名稱。世界檔案儲存在 ".wbt" 檔案中，並且這些 ".wbt" 檔案儲存在每個 Webots 專案的 "worlds" 子目錄中。 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n What is a Controller? \n \n \n \n \n \n \n \n \n \n 控制程式是控制在世界檔案中指定的機器人的電腦程式。控制程式可以用 Webots 支援的任何程式語言編寫：C、C++、Java、Python 或 MATLAB。當模擬啟動時，Webots 會啟動指定的控制程式，每個控制程式作為一個獨立的進程運行，並將這些控制程式進程與模擬中的機器人關聯起來。需要注意的是，多個機器人可以使用相同的控制程式碼，但每個機器人會啟動一個獨立的進程。 \n 一些程式語言需要編譯（如 C 和 C++），其他語言需要解釋執行（如 Python 和 MATLAB），還有一些則需要同時進行編譯和解釋執行（如 Java）。例如，C 和 C++ 控制程式會被編譯成與平台相關的二進位可執行檔案（例如，在 Windows 下是 ".exe" 檔案）。Python 和 MATLAB 控制程式由對應的執行時系統解釋執行（必須安裝相應的系統）。Java 控制程式則需要先編譯成位元碼（".class" 檔案或 ".jar" 檔案），然後由 Java 虛擬機（JVM）解釋執行。 \n 每個控制程式的源碼檔案和二進位檔案會一起存放在一個控制程式目錄中。該控制程式目錄位於每個 Webots 專案的 "controllers" 子目錄下。 \n What is a Supervisor Controller? \n Supervisor 控制程式是當機器人的 supervisor 欄位設置為 TRUE 時的控制程式，它可以執行通常只有人類操作員才能執行的操作，而不是由真實機器人來完成。Supervisor 控制程式可以用上述提到的任何程式語言編寫。然而，與一般的機器人控制程式不同，Supervisor 控制程式將擁有對特權操作的存取權。這些特權操作包括模擬控制，例如，將機器人移動到隨機位置、捕捉模擬畫面視頻等。 \n \n \n \n \n \n \n \n \n \n \n 2.重要的英文單字與用法, 並且針對其中所使用的英文文法逐句說明. \n \n \n \n \n \n \n \n \n \n \n Webots  – 專業的移動機器人模擬軟體 \n simulation  – 模擬 \n prototyping  – 原型設計 \n virtual worlds  – 虛擬世界 \n physics properties  – 物理屬性 \n mass  – 質量 \n joints  – 關節 \n friction coefficient  – 摩擦係數 \n passive objects  – 被動物件 \n active objects  – 主動物件 \n locomotion  – 移動方式 \n sensors  – 感測器 \n actuators  – 驅動裝置 \n emitters and receivers  – 發射器與接收器 \n behavior  – 行為 \n interfaces  – 介面 \n robotics  – 機器人學 \n adaptive behavior  – 適應性行為 \n genetic algorithm  – 基因演算法 \n neural networks  – 神經網絡 \n VRML97  – 虛擬現實建模語言 \n controller  – 控制器 \n compilation  – 編譯 \n interpretation  – 直譯 \n supervisor  – 監督控制器 \n \n 句子結構與文法解析：1.  Webots is a professional mobile robot simulation software package. \n \n Webots is → 主詞 + 動詞 (簡單現在式) \n a professional mobile robot simulation software package → 補語 (名詞片語) \n is 為 be 動詞，表示 Webots 的性質 \n \n 2.  It offers a rapid prototyping environment, that allows the user to create 3D virtual worlds with physics properties such as mass, joints, friction coefficients, etc. \n \n It offers → 主詞 (It) + 動詞 (offers) \n a rapid prototyping environment → 受詞 (名詞片語) \n that allows the user to create 3D virtual worlds... → 闡述 "environment" 的關係子句 \n with physics properties such as mass, joints, friction coefficients, etc .  → 介系詞片語，說明 3D 虛擬世界的特性 \n \n 3.  These robots can have different locomotion schemes (wheeled robots, legged robots, or flying robots). \n \n These robots → 主詞 \n can have → 助動詞 (can) + 動詞 (have) \n different locomotion schemes → 受詞 (名詞片語) \n 括號內的 wheeled robots, legged robots, or flying robots 例舉不同移動方式 \n \n 4.  Webots contains a large number of robot models and controller program examples to help users get started. \n \n Webots contains → 主詞 + 動詞 (簡單現在式) \n a large number of robot models and controller program examples → 受詞 (名詞片語) \n to help users get started → 不定詞短語，表示目的 \n \n 5. Webots also contains a number of interfaces to real mobile robots, so that once your simulated robot behaves as expected, you can transfer its control program to a real robot like e-puck, DARwIn-OP, Nao, etc. \n \n Webots also contains a number of interfaces to real mobile robots → 主要子句 \n so that once your simulated robot behaves as expected → 目的從句 \n you can transfer its control program to a real robot → 結果子句 \n like e-puck, DARwIn-OP, Nao, etc. → 例舉 (類似於 such as) \n \n 6. A world, in Webots, is a 3D description of the properties of robots and of their environment. \n \n A world, in Webots, is → 主詞 + 動詞 (be 動詞) \n a 3D description of the properties of robots and of their environment → 補語 (名詞片語) \n in Webots → 介系詞片語，補充 "A world" 在 Webots 中的意義 \n \n 7. Controllers can be written in any of the programming languages supported by Webots: C, C++, Java, Python, or MATLAB. \n \n Controllers can be written in → 被動語態 (助動詞 can + be + 過去分詞) \n any of the programming languages → 受詞 (名詞片語) \n supported by Webots → 過去分詞片語修飾 "programming languages" \n 冒號 (:) 用於列舉 \n \n 8. The Supervisor controller is the controller of a Robot whose supervisor field is set to TRUE. \n \n The Supervisor controller is the controller of a Robot → 主句 \n whose supervisor field is set to TRUE → 關係代名詞 "whose" 引導的形容詞子句，修飾 "a Robot" \n is set to TRUE → 被動語態 (be + 過去分詞) \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'task5.html'}, {'title': 'task6', 'text': '\n', 'tags': '', 'url': 'task6.html'}, {'title': 'task7', 'text': '\n', 'tags': '', 'url': 'task7.html'}, {'title': 'task8', 'text': '\n \n 課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站: https://mdecd2025.github.io/hw-yan41223101/content/index.html \xa0 \n 學員作業倉儲:\xa0 https://github.com/mdecd2025/hw-yan41223101 \xa0\xa0 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n \n', 'tags': '', 'url': 'task8.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 -\xa041223101 \n \n 檔案: /downloads/hhw1.zip \n \n \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 -\xa041223101 \n \n 檔案: /downloads/41223101_hw2.7z \n \n 因為前端沒有錄到所以只有後面程式碼跟每個步驟檢查的部分，。 \n \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 41223101 \n 這次的作業跟前面的相比很不一樣，之前的兩個都是差不多的桿件做轉動，這次的是底下做好穩固後把球拋出去，所以分比較多步驟，也不會像之前的一個拉一個容易搞混。 \n \n 檔案: /downloads/hhw3.zip \n \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度: \n 各週網頁內容: \n 期中心得: \n 期中自評影片: \n \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 -\xa041223101 \n \n exam1:\xa0 /downloads/exam_!.zip \n \n \n', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 -\xa041223101 \n 檔案: /downloads/41223101_Exam2.7z \n 心得:從一開始使用 SolveSpace 建模開始，就遇到了不少挑戰。先是要調整角度與對齊幾何形狀就花了很多時間，而且中間還出現紅色警告訊息，讓我以為模型無法順利完成。幸好經過多次嘗試與調整，最終還是解決了問題。然後轉換到 Webots 的階段，為了正確對齊節點、調整比例與位置，我試了好幾次才讓模型能夠正確導入並運作，讓我學到許多關於 3D 建模與模擬平台轉換之間的細節。\xa0 \n \n \n \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號 \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};