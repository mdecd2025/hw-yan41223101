<h1>About</h1>
<p>課程名稱: 協同產品設計實習 - Collaborative Product Design Practice</p>
<p>學員作業網站: <a href="https://mdecd2025.github.io/hw-yan41223101/content/index.html">https://mdecd2025.github.io/hw-yan41223101/content/index.html</a> </p>
<p>學員作業倉儲: <a href="https://github.com/mdecd2025/hw-yan41223101">https://github.com/mdecd2025/hw-yan41223101</a> </p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學:</p>
<p>以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p>Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p>Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p>Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p>Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<h1>List</h1>
<p><a href="https://mdecd2025.github.io/hw-yan41223101/content/Brython.html?src=https://gist.githubusercontent.com/41223105/848039b388b60c03d4702aa2fa9fffe0/raw/9242baa8d44bf8f5405b540d10ad8eefc62559c0/2a-g8" title="2a-g8">2a-g8</a></p>
<p></p>
<h1>W4</h1>
<p>建立可攜程式的內容</p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ucXJGhZuFMo" width="560"></iframe></p>
<h1>W16</h1>
<p></p>
<p>檔案:<a href="/downloads/hhw1.zip">/downloads/hhw1.zip</a></p>
<p>心得: 今天改了紅色的長度，先是找到紅色桿件的位置，然後看到geometry box 的x改成0.2，x、y、z代表長寬高，所以我只有改長度的位置，有轉成功但是有點空洞。所以我就把綠色的長度也變長了比例好一點。</p>
<p></p>
<p></p><h1>Tasks</h1>
<h3>task1</h3>
<p></p>
<h3>task2</h3>
<p></p>
<h3>task3</h3>
<p><a href="/downloads/fourbar__.zip">/downloads/fourbar__.zip</a> </p>
<p></p>
<h3>task4</h3>
<p></p>
<h3>task5</h3>
<p><span>1.</span><span>請用繁體中文詳細說明下列資料</span></p>
<h5 class="anchor-header" id="whatiswebots" name="what-is-webots">What is Webots?</h5>
<p data-end="264" data-start="0">Webots 是一款專業的移動機器人模擬軟體套件。它提供了一個快速原型開發環境，使用者可以在其中創建擁有物理屬性（如質量、關節、摩擦係數等）的 3D 虛擬世界。使用者可以新增簡單的被動物體或稱為移動機器人的主動物體。這些機器人可以擁有不同的運動方式（如輪式機器人、腿式機器人或飛行機器人）。此外，它們可能配備多種感測器和執行器設備，例如距離感測器、驅動輪、攝影機、馬達、觸碰感測器、發射器、接收器等。最後，使用者可以為每個機器人編程，以使其表現出所需的行為。Webots 包含大量的機器人模型和控制程式範例，幫助使用者快速入門。</p>
<p data-end="374" data-is-last-node="" data-is-only-node="" data-start="266">Webots 也提供多種與真實移動機器人接口的功能，因此一旦模擬機器人表現符合預期，使用者可以將其控制程式轉移到真實機器人上，如 e-puck、DARwIn-OP、Nao 等。透過相關系統，使用者也可以新增新的接口。</p>
<h5 class="anchor-header" id="whatcanidowithwebots" name="what-can-i-do-with-webots">What can I do with Webots?</h5>
<article class="group/turn w-full text-token-text-primary focus-visible:outline-2 focus-visible:outline-offset-[-4px]" data-scroll-anchor="true" data-testid="conversation-turn-4" dir="auto" tabindex="-1">
<div class="text-base my-auto mx-auto py-[18px] px-6">
<div class="mx-auto flex flex-1 text-base gap-4 md:gap-5 lg:gap-6 md:max-w-3xl">
<div class="group/conversation-turn relative flex w-full min-w-0 flex-col agent-turn @xs/thread:px-0 @sm/thread:px-1.5 @md/thread:px-4">
<div class="flex-col gap-1 md:gap-3">
<div class="flex max-w-full flex-col flex-grow">
<div class="min-h-8 text-message relative flex w-full flex-col items-end gap-2 whitespace-normal break-words text-start [.text-message+&amp;]:mt-5" data-message-author-role="assistant" data-message-id="4c584329-7499-4d0c-8e3e-2c1226ed5509" data-message-model-slug="gpt-4o-mini" dir="auto">
<div class="flex w-full flex-col gap-1 empty:hidden first:pt-[3px]">
<div class="markdown prose w-full break-words dark:prose-invert light">
<p data-end="61" data-start="0">Webots 非常適合用於與移動機器人相關的研究與教育專案。許多移動機器人專案多年來一直依賴 Webots，涵蓋以下領域：</p>
<ul data-end="271" data-is-last-node="" data-is-only-node="" data-start="63">
<li data-end="106" data-start="63">移動機器人原型開發（學術研究、汽車工業、航空航太、吸塵器產業、玩具產業、愛好者等）</li>
<li data-end="137" data-start="107">機器人運動學研究（腿式機器人、仿人機器人、四足機器人等）</li>
<li data-end="164" data-start="138">多代理系統研究（群體智慧、協作移動機器人群體等）</li>
<li data-end="191" data-start="165">自適應行為研究（遺傳算法、神經網絡、人工智慧等）</li>
<li data-end="233" data-start="192">機器人教學（機器人學課程、C/C++/Java/Python 程式設計課程等）</li>
<li data-end="271" data-is-last-node="" data-start="234">機器人競賽（例如 Robotstadium 或 Rat's Life）</li>
</ul>
<h5 class="anchor-header" id="whatdoineedtoknowtousewebots" name="what-do-i-need-to-know-to-use-webots">What do I need to know to use Webots?</h5>
<article class="group/turn w-full text-token-text-primary focus-visible:outline-2 focus-visible:outline-offset-[-4px]" data-scroll-anchor="true" data-testid="conversation-turn-6" dir="auto" tabindex="-1">
<div class="text-base my-auto mx-auto py-[18px] px-6">
<div class="mx-auto flex flex-1 text-base gap-4 md:gap-5 lg:gap-6 md:max-w-3xl">
<div class="group/conversation-turn relative flex w-full min-w-0 flex-col agent-turn @xs/thread:px-0 @sm/thread:px-1.5 @md/thread:px-4">
<div class="flex-col gap-1 md:gap-3">
<div class="flex max-w-full flex-col flex-grow">
<div class="min-h-8 text-message relative flex w-full flex-col items-end gap-2 whitespace-normal break-words text-start [.text-message+&amp;]:mt-5" data-message-author-role="assistant" data-message-id="2fde0c65-2ca3-4b3e-a0a3-248c199c4cb2" data-message-model-slug="gpt-4o-mini" dir="auto">
<div class="flex w-full flex-col gap-1 empty:hidden first:pt-[3px]">
<div class="markdown prose w-full break-words dark:prose-invert light">
<ul data-end="289" data-is-last-node="" data-is-only-node="" data-start="25">
<li data-end="159" data-start="25">若要編寫您自己的機器人控制程式，您需要具備基本的 C、C++、Java、Python 或 MATLAB 程式設計語言知識。然而，即使您不熟悉這些語言，您仍然可以使用一種簡單的圖形程式設計語言 BotStudio 來編程 e-puck 和 Hemisson 機器人。</li>
<li data-end="289" data-is-last-node="" data-start="160">如果您不想使用 Webots 提供的現有機器人模型，而是希望創建自己的機器人模型，或在模擬環境中添加特殊物體，您將需要具備基本的 3D 電腦圖形和 VRML97 描述語言知識。這將使您能夠在 Webots 中創建 3D 模型或從 3D 建模軟體匯入模型。<br/><br/></li>
</ul>
<h5 class="anchor-header" id="howdoigetusersupport" name="how-do-i-get-user-support">How do I get User Support?</h5>
<article class="group/turn w-full text-token-text-primary focus-visible:outline-2 focus-visible:outline-offset-[-4px]" data-scroll-anchor="true" data-testid="conversation-turn-8" dir="auto" tabindex="-1">
<div class="text-base my-auto mx-auto py-[18px] px-6">
<div class="mx-auto flex flex-1 text-base gap-4 md:gap-5 lg:gap-6 md:max-w-3xl">
<div class="group/conversation-turn relative flex w-full min-w-0 flex-col agent-turn @xs/thread:px-0 @sm/thread:px-1.5 @md/thread:px-4">
<div class="flex-col gap-1 md:gap-3">
<div class="flex max-w-full flex-col flex-grow">
<div class="min-h-8 text-message relative flex w-full flex-col items-end gap-2 whitespace-normal break-words text-start [.text-message+&amp;]:mt-5" data-message-author-role="assistant" data-message-id="c2faa70e-a3d9-47bc-a36b-8e6ee88c326c" data-message-model-slug="gpt-4o-mini" dir="auto">
<div class="flex w-full flex-col gap-1 empty:hidden first:pt-[3px]">
<div class="markdown prose w-full break-words dark:prose-invert light">
<p data-end="67" data-start="0">Cyberbotics 提供透過其 Premier Service 計劃和 Custom Development 服務的付費用戶支援。</p>
<p data-end="107" data-start="69">此外，還可以在各種地方獲得基於社群的支援，但無法保證您一定能得到問題的答案：</p>
<ul data-end="298" data-is-last-node="" data-is-only-node="" data-start="109">
<li data-end="174" data-start="109">標註有 Webots 標籤的 Robotics StackExchange 可能是提出有關 Webots 技術問題的最佳場所。</li>
<li data-end="222" data-start="175">GitHub Discussions 可用於提出與 Webots 開發及其文檔相關的問題。</li>
<li data-end="261" data-start="223">GitHub Issues 應僅用於報告在 Webots 中發現的錯誤。</li>
<li data-end="298" data-is-last-node="" data-start="262">Discord 可用於快速提問和與 Webots 社群進行即興討論。</li>
</ul>
</div>
</div>
</div>
</div>
<div class="mt-3 w-full empty:hidden">
<div class="text-center">
<h5 class="anchor-header" id="webotssimulation" name="webots-simulation">Webots Simulation</h5>
</div>
</div>
</div>
<div class="absolute">
<p data-end="22" data-start="0">一個 Webots 模擬由以下幾個項目組成：</p>
<ul data-end="209" data-is-last-node="" data-is-only-node="" data-start="24">
<li data-end="106" data-start="24">一個 Webots 世界檔案（.wbt），定義了其中一個或多個機器人及其環境。該 .wbt 檔案有時會依賴於外部的 PROTO 檔案（.proto）和材質檔案。</li>
<li data-end="161" data-start="107">一個或多個控制程式，用於控制上述機器人（支援 C/C++/Java/Python/MATLAB 語言）。</li>
<li data-end="209" data-is-last-node="" data-start="162">一個可選的物理插件，可以用來修改 Webots 預設的物理行為（使用 C/C++ 編寫）。</li>
</ul>
<h5 class="anchor-header" id="whatisaworld" name="what-is-a-world">What is a World?</h5>
<p class="anchor-header" name="what-is-a-world">在 Webots 中，世界是一個 3D 描述，定義了機器人及其環境的屬性。它包含了每個物體的描述：位置、方向、幾何形狀、外觀（如顏色或亮度）、物理屬性、物體類型等。世界是以層級結構組織的，其中物體可以包含其他物體（如同在 VRML97 中）。例如，一個機器人可以包含兩個輪子、一個距離感測器和一個關節，而該關節本身又包含一個攝影機等。世界檔案不包含機器人的控制程式碼；它只指定每個機器人所需的控制程式名稱。世界檔案儲存在 ".wbt" 檔案中，並且這些 ".wbt" 檔案儲存在每個 Webots 專案的 "worlds" 子目錄中。</p>
</div>
</div>
</div>
</div>
</article>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</article>
<div aria-hidden="true" class="pointer-events-none h-px w-px" data-edge="true">
<h5 class="anchor-header" id="whatisacontroller" name="what-is-a-controller">What is a Controller?</h5>
</div>
</div>
</div>
</div>
</div>
<div class="mb-2 flex gap-3 -ml-2">
<div class="flex items-center justify-start rounded-xl p-1">
<div>
<div class="flex items-center">
<p data-end="187" data-start="0">控制程式是控制在世界檔案中指定的機器人的電腦程式。控制程式可以用 Webots 支援的任何程式語言編寫：C、C++、Java、Python 或 MATLAB。當模擬啟動時，Webots 會啟動指定的控制程式，每個控制程式作為一個獨立的進程運行，並將這些控制程式進程與模擬中的機器人關聯起來。需要注意的是，多個機器人可以使用相同的控制程式碼，但每個機器人會啟動一個獨立的進程。</p>
<p data-end="441" data-start="189">一些程式語言需要編譯（如 C 和 C++），其他語言需要解釋執行（如 Python 和 MATLAB），還有一些則需要同時進行編譯和解釋執行（如 Java）。例如，C 和 C++ 控制程式會被編譯成與平台相關的二進位可執行檔案（例如，在 Windows 下是 ".exe" 檔案）。Python 和 MATLAB 控制程式由對應的執行時系統解釋執行（必須安裝相應的系統）。Java 控制程式則需要先編譯成位元碼（".class" 檔案或 ".jar" 檔案），然後由 Java 虛擬機（JVM）解釋執行。</p>
<p data-end="518" data-is-last-node="" data-is-only-node="" data-start="443">每個控制程式的源碼檔案和二進位檔案會一起存放在一個控制程式目錄中。該控制程式目錄位於每個 Webots 專案的 "controllers" 子目錄下。</p>
<h5 class="anchor-header" id="whatisasupervisorcontroller" name="what-is-a-supervisor-controller">What is a Supervisor Controller?</h5>
<p data-end="518" data-is-last-node="" data-is-only-node="" data-start="443">Supervisor 控制程式是當機器人的 supervisor 欄位設置為 TRUE 時的控制程式，它可以執行通常只有人類操作員才能執行的操作，而不是由真實機器人來完成。Supervisor 控制程式可以用上述提到的任何程式語言編寫。然而，與一般的機器人控制程式不同，Supervisor 控制程式將擁有對特權操作的存取權。這些特權操作包括模擬控制，例如，將機器人移動到隨機位置、捕捉模擬畫面視頻等。</p>
<p data-end="518" data-is-last-node="" data-is-only-node="" data-start="443"></p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</article>
<p data-end="374" data-is-last-node="" data-is-only-node="" data-start="266">2.重要的英文單字與用法, 並且針對其中所使用的英文文法逐句說明.</p>
<div class="flex flex-1 grow basis-auto flex-col overflow-hidden">
<div class="relative h-full">
<div class="flex h-full flex-col overflow-y-auto [scrollbar-gutter:stable]">
<div class="mt-1.5 flex flex-col text-sm @thread-xl/thread:pt-header-height md:pb-9">
<article class="group/turn w-full text-token-text-primary focus-visible:outline-2 focus-visible:outline-offset-[-4px]" data-scroll-anchor="true" data-testid="conversation-turn-2" dir="auto" tabindex="-1">
<div class="text-base my-auto mx-auto py-[18px] px-6">
<div class="mx-auto flex flex-1 text-base gap-4 md:gap-5 lg:gap-6 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem]">
<div class="group/conversation-turn relative flex w-full min-w-0 flex-col agent-turn @xs/thread:px-0 @sm/thread:px-1.5 @md/thread:px-4">
<div class="flex-col gap-1 md:gap-3">
<ol data-end="699" data-start="15">
<li data-end="43" data-start="15"><strong data-end="28" data-start="18">Webots</strong> – 專業的移動機器人模擬軟體</li>
<li data-end="66" data-start="44"><strong data-end="61" data-start="47">simulation</strong> – 模擬</li>
<li data-end="92" data-start="67"><strong data-end="85" data-start="70">prototyping</strong> – 原型設計</li>
<li data-end="121" data-start="93"><strong data-end="114" data-start="96">virtual worlds</strong> – 虛擬世界</li>
<li data-end="154" data-start="122"><strong data-end="147" data-start="125">physics properties</strong> – 物理屬性</li>
<li data-end="171" data-start="155"><strong data-end="166" data-start="158">mass</strong> – 質量</li>
<li data-end="190" data-start="172"><strong data-end="185" data-start="175">joints</strong> – 關節</li>
<li data-end="225" data-start="191"><strong data-end="218" data-start="194">friction coefficient</strong> – 摩擦係數</li>
<li data-end="255" data-start="226"><strong data-end="248" data-start="229">passive objects</strong> – 被動物件</li>
<li data-end="285" data-start="256"><strong data-end="278" data-start="260">active objects</strong> – 主動物件</li>
<li data-end="311" data-start="286"><strong data-end="304" data-start="290">locomotion</strong> – 移動方式</li>
<li data-end="333" data-start="312"><strong data-end="327" data-start="316">sensors</strong> – 感測器</li>
<li data-end="358" data-start="334"><strong data-end="351" data-start="338">actuators</strong> – 驅動裝置</li>
<li data-end="399" data-start="359"><strong data-end="389" data-start="363">emitters and receivers</strong> – 發射器與接收器</li>
<li data-end="421" data-start="400"><strong data-end="416" data-start="404">behavior</strong> – 行為</li>
<li data-end="445" data-start="422"><strong data-end="440" data-start="426">interfaces</strong> – 介面</li>
<li data-end="469" data-start="446"><strong data-end="462" data-start="450">robotics</strong> – 機器人學</li>
<li data-end="503" data-start="470"><strong data-end="495" data-start="474">adaptive behavior</strong> – 適應性行為</li>
<li data-end="537" data-start="504"><strong data-end="529" data-start="508">genetic algorithm</strong> – 基因演算法</li>
<li data-end="568" data-start="538"><strong data-end="561" data-start="542">neural networks</strong> – 神經網絡</li>
<li data-end="594" data-start="569"><strong data-end="583" data-start="573">VRML97</strong> – 虛擬現實建模語言</li>
<li data-end="619" data-start="595"><strong data-end="613" data-start="599">controller</strong> – 控制器</li>
<li data-end="644" data-start="620"><strong data-end="639" data-start="624">compilation</strong> – 編譯</li>
<li data-end="672" data-start="645"><strong data-end="667" data-start="649">interpretation</strong> – 直譯</li>
<li data-end="699" data-start="673"><strong data-end="691" data-start="677">supervisor</strong> – 監督控制器</li>
</ol>
<p class="flex max-w-full flex-col flex-grow">句子結構與文法解析：1. <strong>Webots is a professional mobile robot simulation software package.</strong></p>
<ul data-end="938" data-start="800">
<li data-end="833" data-start="800">Webots is → 主詞 + 動詞 (簡單現在式)</li>
<li data-end="907" data-start="834">a professional mobile robot simulation software package → 補語 (名詞片語)</li>
<li data-end="938" data-start="908">is 為 be 動詞，表示 Webots 的性質</li>
</ul>
<p class="flex max-w-full flex-col flex-grow">2. <strong>It offers a rapid prototyping environment, that allows the user to create 3D virtual worlds with physics properties such as mass, joints, friction coefficients, etc.</strong></p>
<ul data-end="1397" data-start="1123">
<li data-end="1162" data-start="1123">It offers → 主詞 (It) + 動詞 (offers)</li>
<li data-end="1212" data-start="1163">a rapid prototyping environment → 受詞 (名詞片語)</li>
<li data-end="1295" data-start="1213">that allows the user to create 3D virtual worlds... → 闡述 "environment" 的關係子句</li>
<li data-end="1397" data-start="1296">with physics properties such as mass, joints, friction coefficients, etc<strong data-end="1375" data-start="1298">.</strong> → 介系詞片語，說明 3D 虛擬世界的特性</li>
</ul>
<p class="flex max-w-full flex-col flex-grow">3. <strong>These robots can have different locomotion schemes (wheeled robots, legged robots, or flying robots).</strong></p>
<ul data-end="1695" data-start="1518">
<li data-end="1541" data-start="1518">These robots → 主詞</li>
<li data-end="1580" data-start="1542">can have → 助動詞 (can) + 動詞 (have)</li>
<li data-end="1627" data-start="1581">different locomotion schemes → 受詞 (名詞片語)</li>
<li data-end="1695" data-start="1628">括號內的 wheeled robots, legged robots, or flying robots 例舉不同移動方式</li>
</ul>
<p class="flex max-w-full flex-col flex-grow">4. <strong>Webots contains a large number of robot models and controller program examples to help users get started.</strong></p>
<ul data-end="1985" data-start="1820">
<li data-end="1859" data-start="1820">Webots contains → 主詞 + 動詞 (簡單現在式)</li>
<li data-end="1940" data-start="1860">a large number of robot models and controller program examples → 受詞 (名詞片語)</li>
<li data-end="1985" data-start="1941">to help users get started → 不定詞短語，表示目的</li>
</ul>
<h4 data-end="2212" data-start="1992"><strong data-end="2212" data-start="1997">5. Webots also contains a number of interfaces to real mobile robots, so that once your simulated robot behaves as expected, you can transfer its control program to a real robot like e-puck, DARwIn-OP, Nao, etc.</strong></h4>
<ul data-end="2483" data-start="2213">
<li data-end="2291" data-start="2213">Webots also contains a number of interfaces to real mobile robots → 主要子句</li>
<li data-end="2358" data-start="2292">so that once your simulated robot behaves as expected → 目的從句</li>
<li data-end="2424" data-start="2359">you can transfer its control program to a real robot → 結果子句</li>
<li data-end="2483" data-start="2425">like e-puck, DARwIn-OP, Nao, etc. → 例舉 (類似於 such as)</li>
</ul>
<h4 data-end="2595" data-start="2490"><strong data-end="2595" data-start="2495">6. A world, in Webots, is a 3D description of the properties of robots and of their environment.</strong></h4>
<ul data-end="2781" data-start="2596">
<li data-end="2642" data-start="2596">A world, in Webots, is → 主詞 + 動詞 (be 動詞)</li>
<li data-end="2730" data-start="2643">a 3D description of the properties of robots and of their environment → 補語 (名詞片語)</li>
<li data-end="2781" data-start="2731">in Webots → 介系詞片語，補充 "A world" 在 Webots 中的意義</li>
</ul>
<h4 data-end="2916" data-start="2788"><strong data-end="2916" data-start="2793">7. Controllers can be written in any of the programming languages supported by Webots: C, C++, Java, Python, or MATLAB.</strong></h4>
<ul data-end="3111" data-start="2917">
<li data-end="2981" data-start="2917">Controllers can be written in → 被動語態 (助動詞 can + be + 過去分詞)</li>
<li data-end="3032" data-start="2982">any of the programming languages → 受詞 (名詞片語)</li>
<li data-end="3093" data-start="3033">supported by Webots → 過去分詞片語修飾 "programming languages"</li>
<li data-end="3111" data-start="3094">冒號 (:) 用於列舉</li>
</ul>
<h4 data-end="3223" data-start="3118"><strong data-end="3223" data-start="3123">8. The Supervisor controller is the controller of a Robot whose supervisor field is set to TRUE.</strong></h4>
<ul data-end="3411" data-start="3224">
<li data-end="3289" data-start="3224">The Supervisor controller is the controller of a Robot → 主句</li>
<li data-end="3371" data-start="3290">whose supervisor field is set to TRUE → 關係代名詞 "whose" 引導的形容詞子句，修飾 "a Robot"</li>
<li data-end="3411" data-start="3372">is set to TRUE → 被動語態 (be + 過去分詞)</li>
</ul>
</div>
</div>
</div>
</div>
</article>
</div>
</div>
</div>
</div>
<h3>task6</h3>
<p></p>
<h3>task7</h3>
<p></p>
<h3>task8</h3>
<p></p>
<p></p>
<p>課程名稱: 協同產品設計實習 - Collaborative Product Design Practice</p>
<p>學員作業網站:<a href="https://mdecd2025.github.io/hw-yan41223101/content/index.html">https://mdecd2025.github.io/hw-yan41223101/content/index.html</a> </p>
<p>學員作業倉儲: <a href="https://github.com/mdecd2025/hw-yan41223101">https://github.com/mdecd2025/hw-yan41223101</a>  </p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<p></p>
<h1>Homework</h1>
<p>作業 (30%)</p>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">part1:</p>
<p style="padding-left: 60px;">請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置:</p>
<p style="padding-left: 90px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB, 可單獨運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> (171 MB, 解開壓縮後約為 1GB, 必須連網運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Blender4.2.7z">Blender4.2.7z</a></p>
<p style="padding-left: 30px;">part2:</p>
<p style="padding-left: 60px;">請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 60px;">base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec.</p>
<p style="padding-left: 30px;">part3:</p>
<p style="padding-left: 60px;">模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2025_hw1_demo.7z">cd2025_hw1_demo.7z</a></p>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p style="padding-left: 30px;">請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 (<a href="https://www.youtube.com/watch?v=LloG_Jn_TI0&amp;t=51s">參考影片</a>)後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="/downloads/fourbar_ball_throwing_linkage.slvs">fourbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><a href="/downloads/sixbar_ball_throwing_linkage.slvs">sixbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><img alt="" height="264" src="/images/fourbar_ball_throwing_linkage.gif" width="400"/></p>
<h2>HW1</h2>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 41223101</p>
<p></p>
<p>檔案:<a href="/downloads/hhw1.zip">/downloads/hhw1.zip</a></p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/D9Az2tODb9o" width="560"></iframe></p>
<p></p>
<h2>HW2</h2>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 41223101</p>
<p></p>
<p>檔案:<a href="/downloads/41223101_hw2.7z">/downloads/41223101_hw2.7z</a></p>
<p></p>
<p>因為前端沒有錄到所以只有後面程式碼跟每個步驟檢查的部分，。</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/FQOvBJIzoME" width="560"></iframe></p>
<h2>HW3</h2>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 41223101</p>
<p>這次的作業跟前面的相比很不一樣，之前的兩個都是差不多的桿件做轉動，這次的是底下做好穩固後把球拋出去，所以分比較多步驟，也不會像之前的一個拉一個容易搞混。</p>
<p></p>
<p>檔案:<a href="/downloads/hhw3.zip">/downloads/hhw3.zip</a></p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/We6UYIhRUTY" width="560"></iframe></p>
<h1>Midterm</h1>
<p>本課程所繳交的期中成績為學員自評之學習期望成績.</p>
<p>期中考週的自評期望成績繳交流程:</p>
<ol>
<li>整理先前所完成的各週的進度、作業網頁內容以及心得</li>
<li>拍攝期中自評影片, 上傳至 Youtube 後, 以"<span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號</span>"為影片標題後嵌入本頁面中</li>
<li>回填期中自評表單</li>
<li>上傳學員期中成績</li>
</ol>
<p>各週進度:</p>
<p>各週網頁內容:</p>
<p>期中心得:</p>
<p>期中自評影片:</p>
<p></p>
<p style="padding-left: 30px;"></p>
<h1>Exam</h1>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 30px;">各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景 </p>
<p style="padding-left: 30px;">各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p style="padding-left: 30px;">各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站.</p>
<p style="padding-left: 30px;">協同分組方式:</p>
<ol>
<li>分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁.</li>
</ol>
<h2>Exam1</h2>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 41223101</p>
<p></p>
<p>exam1: <a href="/downloads/exam_!.zip">/downloads/exam_!.zip</a></p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Bcc59S47oso" width="560"></iframe></p>
<h2>Exam2</h2>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 41223101</p>
<p>檔案:<a href="/downloads/41223101_Exam2.7z">/downloads/41223101_Exam2.7z</a></p>
<p>心得:從一開始使用 SolveSpace 建模開始，就遇到了不少挑戰。先是要調整角度與對齊幾何形狀就花了很多時間，而且中間還出現紅色警告訊息，讓我以為模型無法順利完成。幸好經過多次嘗試與調整，最終還是解決了問題。然後轉換到 Webots 的階段，為了正確對齊節點、調整比例與位置，我試了好幾次才讓模型能夠正確導入並運作，讓我學到許多關於 3D 建模與模擬平台轉換之間的細節。 </p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/1xxFUMGF8ww" width="560"></iframe></p>
<p></p>
<h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p></p>
<h3>exam3-1</h3>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3- 41223101</p>
<p></p>
<p><a href="http://localhost:1234/index.html">http://localhost:1234/index.html</a></p>
<p>檔案:<a href="/downloads/41223101-Exam3-1.zip">41223101-Exam3-1.zip</a>.</p>
<p>心得:我深刻體會到團隊合作的重要性。影片中提到的 server 和 client 端需要相互配合，我是負責client的部分，多虧了其他兩位同學的配合，才能讓整個系統順利運作，這就像我們小組的合作一樣，每個人都扮演著關鍵的角色。過程中，雖然遇到一些技術上的挑戰，這次經驗讓我學到不只是技術操作，更懂得了溝通、協調與互相支持的重要性。</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/UcmUsv5DRvM" width="560"></iframe></p>
<p></p>
<h3>exam3-2</h3>
<p></p>
<p>檔案:<a href="/downloads/41223101-Exam3-2-w14.7z">/downloads/41223101-Exam3-2-w14.7z</a></p>
<p> <a href="http://[2001:288:6004:17:fff1:cd25:0:a010]:1234">http://[2001:288:6004:17:fff1:cd25:0:a010]:1234/index.html</a></p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/hiQK5BevFus" width="560"></iframe></p><h1>Final</h1>
<p><span>期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%)</span></p>
<p><span>題目: <span style="background-color: #ccffcc;">Webots 動態投籃模擬系統的協同設計</span></span></p>
<p><span>說明: </span></p>
<p style="padding-left: 30px;"><span>籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上.</span></p>
<p style="padding-left: 30px;"><span>操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止.</span></p>
<p>請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中.</p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題<br/></span></p>
<h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>